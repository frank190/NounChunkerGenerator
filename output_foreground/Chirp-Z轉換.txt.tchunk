	﻿	CD	0
Chirp	Chirp	NN	0
-	-	PU	0
Z	Z	NN	0
转换	转换	NN	0
啁啾	啁啾	NN	0
-	-	PU	0
Z	Z	NN	0
转换	转换	NN	0
（	（	PU	0
Chirp	Chirp	NN	0
-	-	PU	0
Ztransform	Ztransform	NN	0
）	）	PU	0
为	为	VC	0
离散傅	离散傅	NN	0
立叶	立叶	VV	0
变换	变换	NN	0
（	（	PU	0
DFT	DFT	NN	0
）	）	PU	0
的	的	DEC	0
一般化	一般化	NN	0
，	，	PU	0
是	是	VC	0
一	一	CD	0
种	种	M	0
适合	适合	VV	0
於	於	P	0
计算	计算	VV	0
当	当	P	0
取	取	VV	0
样频率	样频率	NN	0
间隔	间隔	NN	0
（	（	PU	0
samplingfrequencyinterval	samplingfrequencyinterval	NN	0
）	）	PU	0
与	与	CC	0
取样	取样	VA	0
时间	时间	NN	0
间隔	间隔	NN	0
（	（	PU	0
samplingtimeinterval	samplingtimeinterval	NN	0
）	）	PU	0
乘积	乘积	VV	0
的	的	DEC	0
倒数	倒数	NN	0
不	不	AD	0
等于	等于	VV	0
信号	信号	NN	0
的	的	DEC	0
时频	时频	NN	0
分布	分布	NN	0
面积	面积	NN	0
时	时	LC	0
的	的	DEG	0
演	演	NN	0
算法	算法	NN	0
，	，	PU	0
其	其	PN	0
为	为	VC	0
利用	利用	VV	0
卷积	卷积	NN	0
来	来	MSP	0
实现	实现	VV	0
任意	任意	JJ	I-NP
大小	大小	NN	0
的	的	DEC	0
离散傅	离散傅	NN	0
立叶	立叶	VV	0
变换	变换	NN	0
（	（	PU	0
DFT	DFT	NN	0
）	）	PU	0
的	的	DEG	0
快速	快速	AD	0
傅立	傅立	VV	0
叶	叶	AD	0
变换	变换	VV	0
演	演	VV	0
算法	算法	NN	0
。	。	PU	0
具体来说	具体来说	AD	0
，	，	PU	0
啁啾	啁啾	NN	0
-	-	PU	0
Z	Z	NN	0
转换	转换	NN	0
沿着	沿着	P	0
对	对	P	0
数螺	数螺	NN	0
旋轮廓	旋轮廓	NN	0
，	，	PU	0
计算	计算	VV	0
出	出	VV	0
有限	有限	JJ	I-NP
数量	数量	NN	0
的	的	DEG	0
点z	点z	JJ	I-NP
的	的	DEG	0
Z	Z	NN	0
转换	转换	NN	0
，	，	PU	0
其	其	PN	0
定义	定义	NN	0
如下	如下	VV	0
：	：	PU	0
其中	其中	NN	0
"	"	PU	0
A	A	NN	0
"	"	PU	0
为	为	VC	0
起始点	起始点	NN	0
，	，	PU	0
"	"	PU	0
W	W	NN	0
"	"	PU	0
为	为	VC	0
点	点	NN	0
与	与	CC	0
点	点	NN	0
之间	之间	LC	0
的	的	DEG	0
比率	比率	NN	0
，	，	PU	0
"	"	PU	0
M	M	NN	0
"	"	PU	0
为	为	VC	0
需要	需要	VV	0
计算	计算	VV	0
的	的	DEC	0
点	点	NN	0
的	的	DEG	0
数量	数量	NN	0
。	。	PU	0
离散	离散	NN	0
信号	信号	NN	0
formula	formula	NN	0
其中	其中	NN	0
formula	formula	NN	0
			0
5	5	CD	0
这	这	DT	0
项	项	M	0
的	的	DEG	0
formula	formula	NN	0
所以	所以	AD	0
而	而	AD	0
将	将	BA	0
此	此	DT	0
平	平	CD	0
方展	方展	NN	0
开式	开式	NN	0
带回	带回	VV	0
原式	原式	NN	0
我们	我们	PN	0
可以	可以	VV	0
得到	得到	VV	0
上面	上面	NN	0
的	的	DEC	0
累加	累加	JJ	I-NP
结果	结果	NN	0
恰	恰	AD	0
为	为	VC	0
两	两	CD	0
个	个	M	0
序列	序列	NN	0
"	"	PU	0
a	a	NN	0
"	"	PU	0
及	及	CC	0
"	"	PU	0
b	b	NN	0
"	"	PU	0
的	的	DEG	0
卷积	卷积	NN	0
，	，	PU	0
两	两	CD	0
序列	序列	NN	0
的	的	DEG	0
定义	定义	NN	0
如下	如下	VV	0
：	：	PU	0
而	而	MSP	0
产生	产生	VV	0
的	的	DEC	0
卷积	卷积	NN	0
结果	结果	NN	0
会	会	VV	0
再	再	AD	0
乘上	乘上	VV	0
"	"	PU	0
N	N	CD	0
"	"	PU	0
个	个	M	0
相位	相位	JJ	I-NP
的	的	DEG	0
参数	参数	NN	0
"	"	PU	0
b	b	NN	0
"	"	PU	0
：	：	PU	0
因此	因此	AD	0
离散	离散	VV	0
信号	信号	NN	0
formula	formula	NN	0
的	的	DEG	0
离散傅	离散傅	NN	0
立叶	立叶	VV	0
变换	变换	VV	0
现在	现在	NT	0
可以	可以	VV	0
分成	分成	VV	0
三	三	CD	0
个	个	M	0
步骤	步骤	NN	0
来	来	MSP	0
实现	实现	VV	0
：	：	PU	0
如此	如此	AD	0
即	即	AD	0
可	可	VV	0
得到	得到	VV	0
不同	不同	JJ	I-NP
频率	频率	NN	0
成分	成分	NN	0
的	的	DEG	0
formula	formula	NN	0
此	此	DT	0
卷积	卷积	NN	0
动作	动作	NN	0
可以	可以	VV	0
透过	透过	VV	0
卷积	卷积	NN	0
理论	理论	NN	0
所	所	MSP	0
实现	实现	VV	0
，	，	PU	0
其中	其中	NN	0
，	，	PU	0
由于	由于	P	0
这些	这些	DT	0
快速	快速	AD	0
傅立	傅立	VV	0
叶	叶	NN	0
转换	转换	NN	0
结果	结果	NN	0
的	的	DEG	0
长度	长度	NN	0
"	"	PU	0
N	N	CD	0
"	"	PU	0
不同	不同	VA	0
，	，	PU	0
导致	导致	VV	0
我们	我们	PN	0
必须	必须	VV	0
透过	透过	VV	0
补	补	VV	0
零	零	CD	0
的	的	DEG	0
方式	方式	NN	0
，	，	PU	0
将	将	BA	0
快速	快速	AD	0
傅立	傅立	VV	0
叶	叶	NN	0
转换	转换	NN	0
的	的	DEC	0
结果	结果	NN	0
补	补	VV	0
至	至	P	0
长度	长度	NN	0
大于	大于	VV	0
或	或	CC	0
等于	等于	VV	0
"	"	PU	0
2	2	CD	0
N	N	CD	0
-	-	PU	0
1	1	CD	0
"	"	PU	0
，	，	PU	0
才	才	AD	0
能	能	VV	0
精确	精确	AD	0
计算	计算	VV	0
其	其	PN	0
卷积	卷积	NN	0
结果	结果	NN	0
。	。	PU	0
此外	此外	AD	0
，	，	PU	0
布鲁	布鲁	NN	0
斯	斯	DT	0
坦	坦	NN	0
演	演	VV	0
算法	算法	NN	0
提供	提供	VV	0
一	一	CD	0
个	个	M	0
时间	时间	NN	0
复杂	复杂	VA	0
度	度	DEC	0
为	为	VC	0
O	O	NN	0
(	(	PU	0
"	"	PU	0
N	N	CD	0
"	"	PU	0
log	log	M	0
"	"	PU	0
N	N	NN	0
"	"	PU	0
)	)	NN	0
的	的	DEG	0
方式	方式	NN	0
计算	计算	VV	0
质数	质数	NN	0
大小	大小	NN	0
的	的	DEC	0
离散傅	离散傅	NN	0
立	立	VV	0
叶	叶	NN	0
转换	转换	VV	0
。	。	PU	0
在	在	P	0
布鲁	布鲁	NN	0
斯	斯	DT	0
坦演	坦演	NN	0
算法	算法	NN	0
的	的	DEG	0
卷积	卷积	NN	0
过程	过程	NN	0
中	中	LC	0
使用	使用	VV	0
补	补	NN	0
零	零	OD	0
的	的	DEG	0
方式	方式	NN	0
是	是	VC	0
值得	值得	VV	0
讨论	讨论	VV	0
的	的	DEC	0
。	。	PU	0
如果	如果	CS	0
我们	我们	PN	0
将	将	BA	0
讯号	讯号	NN	0
补	补	VV	0
至	至	P	0
长度	长度	NN	0
为	为	VC	0
"	"	PU	0
M	M	NN	0
"	"	PU	0
≥	≥	NN	0
2	2	CD	0
"	"	PU	0
N	N	CD	0
"	"	PU	0
–	–	NN	0
1	1	CD	0
，	，	PU	0
代表	代表	P	0
"	"	PU	0
a	a	NN	0
"	"	PU	0
被	被	SB	0
扩展	扩展	VV	0
至	至	VV	0
长度	长度	NN	0
为	为	VC	0
"	"	PU	0
M	M	NN	0
"	"	PU	0
的	的	DEG	0
阵列	阵列	NN	0
"	"	PU	0
A	A	NN	0
"	"	PU	0
，	，	PU	0
其中	其中	NN	0
当	当	P	0
0	0	CD	0
≤	≤	M	0
"	"	PU	0
n"<"N	n"<"N	M	0
"	"	PU	0
时	时	LC	0
，	，	PU	0
"	"	PU	0
A	A	NN	0
"	"	PU	0
=	=	NN	0
"	"	PU	0
a	a	NN	0
"	"	PU	0
，	，	PU	0
否则	否则	AD	0
"	"	PU	0
A	A	NN	0
"	"	PU	0
=	=	NN	0
0	0	CD	0
。	。	PU	0
然而	然而	AD	0
，	，	PU	0
基	基	NN	0
於	於	P	0
卷积	卷积	NN	0
中	中	LC	0
的	的	DEG	0
"	"	PU	0
b	b	NN	0
"	"	PU	0
项	项	NN	0
，	，	PU	0
"	"	PU	0
b	b	OD	0
"	"	PU	0
需要	需要	VV	0
n	n	NN	0
的	的	DEG	0
正值	正值	NN	0
和	和	CC	0
负值	负值	NN	0
。	。	PU	0
在	在	P	0
阵列	阵列	NN	0
中	中	LC	0
补	补	VV	0
零	零	CD	0
的	的	DEG	0
离散	离散	NN	0
傅	傅	NN	0
立	立	VV	0
叶	叶	NN	0
转换	转换	VV	0
的	的	DEC	0
周期性	周期性	NN	0
边界	边界	NN	0
，	，	PU	0
代表	代表	VV	0
着	着	AS	0
"	"	PU	0
-	-	PU	0
n	n	NR	0
"	"	PU	0
等于	等于	VV	0
"	"	PU	0
M	M	NN	0
-	-	PU	0
n	n	NN	0
"	"	PU	0
。	。	PU	0
因此	因此	AD	0
，	，	PU	0
"	"	PU	0
b	b	NN	0
"	"	PU	0
被	被	SB	0
扩展	扩展	VV	0
到	到	VV	0
长度	长度	NN	0
为	为	VC	0
"	"	PU	0
M	M	NN	0
"	"	PU	0
的	的	DEG	0
阵列	阵列	NN	0
"	"	PU	0
B	B	NN	0
"	"	PU	0
，	，	PU	0
其中	其中	NN	0
"	"	PU	0
B	B	NN	0
"	"	PU	0
=	=	NN	0
"	"	PU	0
b	b	NN	0
"	"	PU	0
，	，	PU	0
"	"	PU	0
B	B	NN	0
"	"	PU	0
=	=	NN	0
"	"	PU	0
B	B	NN	0
"	"	PU	0
=	=	NN	0
"	"	PU	0
b	b	NN	0
"	"	PU	0
(	(	PU	0
当	当	P	0
0	0	CD	0
<	<	PU	0
"	"	PU	0
n	n	NN	0
"	"	PU	0
&	&	NN	0
lt	lt	NN	0
)	)	PU	0
，	，	PU	0
否则	否则	AD	0
，	，	PU	0
"	"	PU	0
B	B	NN	0
"	"	PU	0
=	=	NN	0
0	0	CD	0
。	。	PU	0
然后	然后	AD	0
根据	根据	P	0
通常	通常	JJ	I-NP
的	的	DEG	0
卷积	卷积	NN	0
定理	定理	VV	0
对	对	P	0
"	"	PU	0
A	A	NN	0
"	"	PU	0
和	和	CC	0
"	"	PU	0
B	B	NN	0
"	"	PU	0
进行	进行	VV	0
快速	快速	JJ	I-NP
傅立	傅立	NN	0
叶	叶	NN	0
转换	转换	VV	0
，	，	PU	0
逐点	逐点	NN	0
相	相	MSP	0
乘	乘	VV	0
，	，	PU	0
并	并	CC	0
进行	进行	VV	0
逆快	逆快	JJ	I-NP
速傅	速傅	NN	0
立	立	VV	0
叶	叶	NN	0
转换	转换	VV	0
以	以	MSP	0
获得	获得	VV	0
"	"	PU	0
a	a	NN	0
"	"	PU	0
和	和	CC	0
"	"	PU	0
b	b	OD	0
"	"	PU	0
的	的	DEG	0
卷积	卷积	NN	0
。	。	PU	0
让	让	VV	0
我们	我们	PN	0
更	更	AD	0
準确	準确	VA	0
地	地	DEV	0
说明	说明	VV	0
，	，	PU	0
布鲁斯	布鲁斯	AD	0
坦演	坦演	VV	0
算法	算法	VV	0
的	的	DEC	0
离散傅	离散傅	NN	0
立	立	VV	0
叶	叶	NN	0
转换	转换	VV	0
需要	需要	VV	0
什么	什么	AD	0
类型	类型	NN	0
的	的	DEG	0
卷积	卷积	NN	0
。	。	PU	0
如果	如果	CS	0
序列	序列	NN	0
"	"	PU	0
b	b	CD	0
"	"	PU	0
在	在	P	0
具有	具有	VV	0
周期	周期	NN	0
"	"	PU	0
N	N	CD	0
"	"	PU	0
的	的	DEG	0
"	"	PU	0
n	n	NN	0
"	"	PU	0
中	中	LC	0
是	是	VC	0
具有	具有	VV	0
周期性	周期性	NN	0
的	的	DEC	0
，	，	PU	0
那么	那么	AD	0
它	它	PN	0
将	将	AD	0
是	是	VC	0
长度	长度	NN	0
为	为	VC	0
"	"	PU	0
N	N	CD	0
"	"	PU	0
的	的	DEG	0
循环	循环	NN	0
卷积	卷积	NN	0
，	，	PU	0
并且	并且	CC	0
，	，	PU	0
为了	为了	P	0
计算	计算	VV	0
上	上	LC	0
的	的	DEG	0
方便	方便	VA	0
而	而	CC	0
使用	使用	VV	0
补	补	NN	0
零	零	OD	0
的	的	DEG	0
方式	方式	NN	0
。	。	PU	0
但	但	AD	0
是	是	VC	0
，	，	PU	0
通常	通常	JJ	I-NP
情况	情况	NN	0
并非	并非	CC	0
如此	如此	VV	0
：	：	PU	0
因此	因此	AD	0
，	，	PU	0
当	当	P	0
"	"	PU	0
N	N	CD	0
"	"	PU	0
为	为	VC	0
偶数	偶数	NN	0
时	时	LC	0
，	，	PU	0
卷积	卷积	NN	0
是	是	VC	0
具有	具有	VV	0
周期性	周期性	NN	0
的	的	DEC	0
，	，	PU	0
但	但	CC	0
在	在	P	0
这	这	DT	0
种	种	M	0
情况	情况	NN	0
下	下	LC	0
，	，	PU	0
人们	人们	NN	0
通常	通常	AD	0
使用	使用	VV	0
更	更	AD	0
有	有	VE	0
效率	效率	NN	0
的	的	DEG	0
快速傅	快速傅	NN	0
立	立	VV	0
叶	叶	NN	0
转换	转换	VV	0
演	演	VV	0
算法	算法	NN	0
，	，	PU	0
例如	例如	AD	0
Cooley	Cooley	NN	0
-	-	PU	0
Tukey	Tukey	NN	0
演算法	演算法	NN	0
；	；	PU	0
反之	反之	AD	0
，	，	PU	0
当	当	P	0
"	"	PU	0
N	N	CD	0
"	"	PU	0
为	为	VC	0
奇数	奇数	NN	0
时	时	LC	0
，	，	PU	0
"	"	PU	0
b	b	NN	0
"	"	PU	0
是	是	VC	0
反	反	VV	0
周期	周期	NN	0
性	性	NN	0
的	的	DEG	0
，	，	PU	0
并且	并且	CC	0
具有	具有	VV	0
长度	长度	NN	0
"	"	PU	0
N	N	CD	0
"	"	PU	0
的	的	DEG	0
负循	负循	NN	0
环卷积	环卷积	NN	0
。	。	PU	0
然而	然而	AD	0
，	，	PU	0
当	当	P	0
如	如	P	0
上	上	NN	0
所	所	MSP	0
述	述	VV	0
，	，	PU	0
使用	使用	VV	0
补	补	NN	0
零	零	OD	0
的	的	DEG	0
方式	方式	NN	0
江	江	NN	0
阵列	阵列	NN	0
补到	补到	VV	0
至少	至少	AD	0
2	2	CD	0
"	"	PU	0
N	N	CD	0
"	"	PU	0
−	−	NN	0
1	1	CD	0
的	的	DEG	0
长度	长度	NN	0
时	时	LC	0
，	，	PU	0
两	两	CD	0
者	者	NN	0
之间	之间	LC	0
的	的	DEG	0
差异	差异	JJ	I-NP
消失	消失	NN	0
。	。	PU	0
上述	上述	JJ	I-NP
提到	提到	VV	0
的	的	DEC	0
布鲁	布鲁	NN	0
斯	斯	DT	0
坦演	坦演	NN	0
算法	算法	NN	0
也	也	AD	0
可以	可以	VV	0
基	基	NN	0
於	於	P	0
单方面	单方面	NN	0
的	的	DEG	0
Z	Z	NN	0
转换	转换	NN	0
，	，	PU	0
用以	用以	VV	0
计算	计算	VV	0
更	更	AD	0
一般	一般	JJ	I-NP
化	化	NN	0
的	的	DEG	0
转换	转换	NN	0
(	(	PU	0
Rabineretal	Rabineretal	NN	0
,	,	PU	0
1969	1969	CD	0
)	)	PU	0
，	，	PU	0
特別	特別	NN	0
是	是	VC	0
具有	具有	VV	0
以下	以下	JJ	I-NP
形式	形式	NN	0
的	的	DEG	0
转换	转换	NN	0
：	：	PU	0
其中	其中	NN	0
"	"	PU	0
z	z	NN	0
"	"	PU	0
为	为	VC	0
任意	任意	JJ	I-NP
复数	复数	NN	0
，	，	PU	0
"	"	PU	0
N	N	CD	0
"	"	PU	0
以及	以及	CC	0
"	"	PU	0
M	M	NR	0
"	"	PU	0
分別为	分別为	NR	0
输入	输入	VV	0
及	及	CC	0
输出	输出	VV	0
的	的	DEC	0
数量	数量	NN	0
。	。	PU	0
由	由	P	0
前面	前面	NN	0
所	所	MSP	0
提到	提到	VV	0
的	的	DEC	0
布鲁	布鲁	NN	0
斯	斯	DT	0
坦演	坦演	NN	0
算法	算法	NN	0
，	，	PU	0
我们	我们	PN	0
可以	可以	VV	0
进行	进行	VV	0
如此	如此	JJ	I-NP
的	的	DEG	0
转换	转换	NN	0
。	。	PU	0
例如	例如	AD	0
，	，	PU	0
获得	获得	VV	0
讯号	讯号	NN	0
某	某	DT	0
一	一	CD	0
部分	部分	NN	0
频	频	VV	0
谱	谱	NN	0
中	中	LC	0
的	的	DEG	0
内	内	JJ	I-NP
插值	插值	NN	0
，	，	PU	0
以及	以及	CC	0
在	在	P	0
传递	传递	NN	0
函数	函数	NN	0
分析	分析	NN	0
中	中	LC	0
增加	增加	VV	0
任	任	VV	0
意极点	意极点	NN	0
，	，	PU	0
皆	皆	AD	0
为	为	P	0
其	其	PN	0
应用	应用	VV	0
之	之	DEC	0
一	一	CD	0
。	。	PU	0
该	该	DT	0
演	演	NN	0
算法	算法	NN	0
被	被	SB	0
称为	称为	VV	0
啁啾	啁啾	NN	0
-	-	PU	0
Z	Z	NN	0
转换	转换	NN	0
演算法	演算法	NN	0
，	，	PU	0
是	是	VC	0
因为	因为	P	0
在	在	P	0
傅	傅	NN	0
立	立	VV	0
叶	叶	NN	0
转换	转换	VV	0
的	的	DEC	0
情境	情境	NN	0
(	(	PU	0
|	|	NN	0
"	"	PU	0
z	z	NN	0
"	"	PU	0
|	|	NN	0
=	=	PU	0
1	1	CD	0
)	)	PU	0
下	下	LC	0
，	，	PU	0
一	一	CD	0
序列	序列	NN	0
"	"	PU	0
b	b	NN	0
"	"	PU	0
是	是	VC	0
一	一	CD	0
复	复	CC	0
数	数	CD	0
正弦波	正弦波	NN	0
，	，	PU	0
而	而	CC	0
在	在	P	0
雷达	雷达	NN	0
系统	系统	NN	0
中	中	LC	0
则	则	AD	0
被	被	SB	0
称作	称作	VV	0
「	「	PU	0
啁啾	啁啾	VV	0
」	」	PU	0
。	。	PU	0
